name: CI and Deploy Coverage

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    # Add condition to skip if commit is from GitHub Actions
    if: github.event.commits[0].author.email != 'actions@github.com'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: |
          pytest --cov=src --cov-report=html --cov-report=xml

      - name: Validate coverage.xml existence
        run: |
          if [ ! -f coverage.xml ]; then
            echo "Error: coverage.xml not found. Exiting."
            exit 1
          fi

      - name: Update Coverage Badge in README (main branch)
        run: |
          COVERAGE=$(grep -oP 'line-rate="\K[0-9.]+' coverage.xml | awk '{printf("%.0f", $1 * 100)}')
          if [ -z "$COVERAGE" ]; then
            echo "Error: Failed to extract coverage percentage. Exiting."
            exit 1
          fi
          BADGE_URL="https://img.shields.io/badge/coverage-$COVERAGE%25-brightgreen.svg"
          sed -i "s|\[!\[Coverage\](.*)\](.*)|[![Coverage]($BADGE_URL)](https://rynpc.github.io/python-poc/)|" README.md
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md
          git commit -m "Update coverage badge to $COVERAGE%" || echo "No changes to commit."
          git push

      - name: Prepare gh-pages branch
        run: |
          git fetch origin gh-pages || echo "gh-pages branch does not exist yet."
          git checkout -B gh-pages

      - name: Copy coverage report to gh-pages
        run: |
          mkdir -p gh-pages
          cp -r htmlcov/* gh-pages/ || echo "No coverage files to copy."
          touch gh-pages/.nojekyll

      - name: Commit and push changes to gh-pages
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -A
          git commit -m "Deploy coverage report" || echo "No changes to commit."
          git push --force origin gh-pages

      - name: Cleanup temporary files
        run: |
          rm -rf gh-pages
