name: CI and Deploy Coverage

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: |
          pytest --cov=src --cov-report=html --cov-report=xml

      - name: Debug htmlcov directory
        run: |
          echo "Listing contents of htmlcov directory:" && ls -la htmlcov

      - name: Debug GitHub Pages branch before deployment
        run: |
          echo "Fetching and listing contents of gh-pages branch before deployment:" && \
          git fetch origin gh-pages && \
          git checkout gh-pages && \
          ls -la

      - name: Clean gh-pages branch
        run: |
          echo "Cleaning gh-pages branch before deployment:" && \
          git rm -r --ignore-unmatch *

      - name: Set Git author identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Force add all files
        run: |
          echo "Force adding all files to the commit:" && \
          git add -A

      - name: Force commit
        run: |
          echo "Forcing a commit even if no changes are detected:" && \
          git commit --allow-empty -m "Force deploy coverage" || echo "No changes to commit"

      - name: Deploy to GitHub Pages
        run: |
          echo "Preparing deployment..."
          mkdir -p gh-pages
          cp -r htmlcov/* gh-pages/
          touch gh-pages/.nojekyll
          cd gh-pages
          git init
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git checkout -b gh-pages
          git add .
          git -c user.name='github-actions' -c user.email='actions@github.com' commit -m "Deploy coverage report"
          git push --force origin gh-pages

      - name: Debug copied htmlcov directory
        run: |
          echo "Listing contents of htmlcov directory in gh-pages branch after copying:" && \
          ls -la htmlcov

      - name: Compare htmlcov directory
        run: |
          echo "Comparing htmlcov directory before and after deployment:" && \
          diff -r htmlcov /home/runner/actions_github_pages_1742571447628/htmlcov || echo "No differences found"

      - name: Debug gh-pages branch after deployment
        run: |
          echo "Fetching and listing contents of gh-pages branch after deployment:" && \
          git fetch origin gh-pages && \
          git checkout gh-pages && \
          ls -la

      - name: Update Coverage Badge in README
        run: |
          echo "Extracting coverage percentage from coverage.xml..."
          COVERAGE=$(grep -oP 'line-rate="\K[0-9.]+' coverage.xml | awk '{printf("%.0f", $1 * 100)}')
          echo "Coverage percentage: $COVERAGE%"
          sed -i "s/\[![Coverage](.*)\](.*)/[![Coverage](https:\/\/img.shields.io\/badge\/coverage-$COVERAGE%25-brightgreen.svg)](https:\/\/rynpc.github.io\/python-poc\/)/" README.md
          git add README.md
          git -c user.name='github-actions' -c user.email='actions@github.com' commit -m "Update coverage badge to $COVERAGE%"
          git push
