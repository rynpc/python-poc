name: CI and Deploy Coverage

on:
  workflow_run:
    workflows: ["CodeQL"]
    types:
      - completed
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write
  pages: write
  security-events: write
  actions: read
  checks: read

env:
  PYTHON_VERSION: '3.x'
  COVERAGE_REPORT_DIR: htmlcov

jobs:
  tests-and-coverage:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha || github.ref }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: pytest --cov=src --cov-report=html --cov-report=xml

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.xml
            ${{ env.COVERAGE_REPORT_DIR }}

  deploy-coverage:
    needs: tests-and-coverage
    if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 10
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.actions }}
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download coverage report artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: Update Coverage Badge in README
        run: |
          echo "Updating coverage badge..."
          COVERAGE=$(python -m src.coverage_utils.get_coverage --coverage-xml coverage.xml --readme README.md)
          EXIT_CODE=$?
          if [ $EXIT_CODE -ne 0 ]; then
            echo "Error updating coverage badge (exit code: $EXIT_CODE)"
            exit 1
          fi
          echo "Coverage: $COVERAGE%"
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          if git diff --quiet README.md; then
            echo "No changes to README.md, skipping commit"
          else
            git add README.md
            git commit -m "Update coverage badge to ${COVERAGE}%"
            git push origin HEAD:main || {
              echo "Failed to push to main branch"
              exit 1
            }
          fi

      - name: Deploy Coverage Report to GitHub Pages
        run: |
          git checkout --orphan gh-pages
          find . -maxdepth 1 -not -name "${COVERAGE_REPORT_DIR}" -not -name '.git' -not -name '.gitignore' -exec rm -rf {} \;
          cp -r ${COVERAGE_REPORT_DIR}/* .
          touch .nojekyll
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -A
          git commit -m "Deploy coverage report for commit ${GITHUB_SHA}"
          git push --force origin gh-pages
